#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 100
typedef struct {
    int arr[MAX_SIZE];
    int top;
} Stack;
void init(Stack *s) {
    s->top = -1;
}
int isEmpty(Stack *s) {
    return s->top == -1;
}
int isFull(Stack *s) {
    return s->top == MAX_SIZE - 1;
}
void push(Stack *s, int value) {
    if (isFull(s)) {
        printf("Stack overflow\n");
        exit(1);
    }
    s->arr[++s->top] = value;
}
int pop(Stack *s) {
    if (isEmpty(s)) {
        printf("Stack underflow\n");
        exit(1);
    }
    return s->arr[s->top--];
}
void deleteMiddleElement(Stack *s, int middleIndex) {
    if (isEmpty(s) || middleIndex < 0) {
        return;
    }
    int temp = pop(s);
    deleteMiddleElement(s, middleIndex - 1);
    if (middleIndex != 0) {
        push(s, temp);
    }
}
int main() {
	printf("v.rajesh\n");
	printf("192311037\n");
    Stack s;
    init(&s);
    push(&s, 1);
    push(&s, 2);
    push(&s, 3);
    push(&s, 4);
    push(&s, 5);
    int middleIndex = (s.top + 1) / 2;
    deleteMiddleElement(&s, middleIndex);
    printf("Stack after deleting middle element:\n");
    while (!isEmpty(&s)) {
        printf("%d\n", pop(&s));
    }
    return 0;
}
C:\Users\M AKASH\Pictures\Screenshots\Screenshot 2023-12-27 213220.png
C:\Users\M AKASH\Pictures\Screenshots\Screenshot 2023-12-27 213220.png
